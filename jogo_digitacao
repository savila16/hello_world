class Bubble {

  x: number;
  y: number;

  letter: string;

  speed: number;

  static radius: number = 20;
  alive: boolean = true;

constructor (x: number, y: number, letter: string, speed: number){
    this.x = x;
    this.y = y;
    this.letter = letter;
    this.speed = speed;
 }

  update (): void {
      this.y += this.speed;
  }
  
  draw (): void {
  fill ("yellow");
  stroke ("yellow");
  circle (this.x, this.y, 1.5*Bubble.radius);
  fill (50);
  stroke (200);
  textSize (15);
  text (this.letter, this.x - 5, this.y + 5)
  }
}

let bubble: Bubble;

class Board {
  bubbles: Bubble [];
  timeout: number = 30;
  timer: number = 0;
  hits = 0;
  mistakes = 0;

  constructor (){
      this.bubbles = [new Bubble (100, 100, "a", 1)];
      this.bubbles.push (new Bubble (200, 100, "b", 2));
      this.bubbles.push (new Bubble (300, 100, "c", 3));
  }

  update (): void {

  this.checkBubbleTime ();
  this.markOutsideBubbles ();

   for (let bubble of this.bubbles) 
     bubble.update ();
   
     this.removeDeadBubbles ();
  }

  removeDeadBubbles (): void {
    this.bubbles = this.bubbles.filter (b => b.alive)
    let vivas: Bubble [] = [];
    for (let bubble of this.bubbles)
      if (bubble.alive)
      vivas.push (bubble);
      this.bubbles = vivas;
  }

  removeByHit (code: number): void {
   for (let bubble of this.bubbles){
   if (bubble.letter [0].toUpperCase ().charCodeAt (0) == code) {
     bubble.alive = false;
     this.hits++;
     break;
       }
    }
  }
  checkBubbleTime (): void{
    this.timer -= 1;
    if (this.timer <= 0){
      this.addBubble ();
      this.timer = this.timeout;
    }
  }

  markOutsideBubbles (): void {
   for (let bubble of this.bubbles)
    if (bubble.y + 2*Bubble.radius >= height){
    bubble.alive = false;
    this.mistakes++; 
    }
  }

  addBubble (): void {
    let x = random (0, width - 2*Bubble.radius);
    let y = -2*Bubble.radius;
    let letter = random (["s", "a", "v", "i", "l", "e", "t", "c", "m", "n", "o", "v", "n", "r"])
    let speed = random (1, 8);
    let bubble = new Bubble (x, y, letter, speed);
    this.bubbles.push (bubble);
  }

  draw (): void {
    stroke("green");
    fill ("green");
    textSize (30);
    text ("hits: " + this.hits + " mistakes: " + this.mistakes, 30, 30);

    for (let bubble of this.bubbles) 
     bubble.draw ();
  }
}

class Game {
  board: Board;
  activeState: () => void;

  constructor (){
    this.board = new Board ();
    this.activeState = this.gamePlay;
  }

  gamePlay (): void {
   this.board.update ();
   background (100, 150, 250);
   this.board.draw ();
   if (this.board.mistakes > 5) {
   this.activeState = this.gameOver;
  } if (this.board.hits > 25){
    this.activeState = this.gameWinner;
   }
}

  gameWinner (): void {
    background (100, 250, 50);
    fill (random (100, 200));
    textSize (100);
    text ("You Win!", 100, 300);
  }

  gameOver (): void {
    background (250, 100, 50);
    fill (0);
    textSize (100);
    text ("Game Over", 50, 300);
  }
}

let game: Game;

function setup (){
    createCanvas (800, 600);
    frameRate (40);
    game = new Game ();
}

function keyPressed () {
  game.board.removeByHit (keyCode);
}

function draw (){
    game.activeState ();
}
